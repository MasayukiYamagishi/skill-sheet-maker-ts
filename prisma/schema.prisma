// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  mbtiResults    MBTIResult[]
  careerHistory  CareerHistory[]
  userSkills     UserSkill[]

  @@map("users")
}

model Skill {
  id          String   @id @default(cuid())
  name        String   @unique
  category    String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userSkills UserSkill[]

  @@map("skills")
}

model UserSkill {
  id     String @id @default(cuid())
  userId String
  skillId String
  level  Int    @default(1) // 1-5 skill level
  
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  skill  Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade)

  @@unique([userId, skillId])
  @@map("user_skills")
}

model Qualification {
  id           String   @id @default(cuid())
  name         String
  organization String
  obtainedAt   DateTime
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("qualifications")
}

model MBTIResult {
  id          String   @id @default(cuid())
  userId      String
  type        String   // e.g., "INTJ", "ENFP"
  description String?
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("mbti_results")
}

model CareerHistory {
  id          String    @id @default(cuid())
  userId      String
  company     String
  position    String
  startDate   DateTime
  endDate     DateTime?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("career_history")
}